class Solution:
    def minMalwareSpread(self, g: List[List[int]], initial: List[int]) -> int:
        n = len(g)
        parent = [i for i in range(n)]

        def find(node):
            if node != parent[node]:
                parent[node] = find(parent[node])
            return parent[node]
        def union(x,y):
            parx,pary = find(x),find(y)
            parent[pary] = parx
        for i in range(len(g)):
            for j in range(len(g)):
                if g[i][j]:
                    union(i,j)
        size_map = defaultdict(int)
        infected_map = defaultdict(int)
        for i in range(n):
            root = find(i)
            size_map[root] +=1
        for i in initial:
            root = find(i)
            infected_map[root] +=1
        index = float('inf')
        _max = -1
        for node in sorted(initial):
            root = find(node)
            if infected_map[root] == 1:
                safes = size_map[root]
                if safes > _max:
                    _max = safes
                    index = node
        
        return index if index != float('inf') else min(initial)

